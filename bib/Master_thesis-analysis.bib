Automatically generated by Mendeley Desktop 1.19.4
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Boukhtouta2015,
author = {Boukhtouta, Amine and Mokhov, Serguei and Lakhdari, Nour-Eddine and Debbabi, Mourad and Paquet, Joey},
doi = {10.1007/s11416-015-0247-x},
journal = {Journal of Computer Virology and Hacking Techniques},
pages = {1--32},
title = {{Network Malware Classification Comparison Using DPI and Flow Packet Headers}},
volume = {11},
year = {2015}
}
@misc{Ahmadi2016,
archivePrefix = {arXiv},
arxivId = {cs.CR/1511.04317},
author = {Ahmadi, Mansour and Ulyanov, Dmitry and Semenov, Stanislav and Trofimov, Mikhail and Giacinto, Giorgio},
eprint = {1511.04317},
primaryClass = {cs.CR},
title = {{Novel Feature Extraction, Selection and Fusion for Effective Malware Family Classification}},
year = {2016}
}
@article{Abdessadki2019,
author = {Abdessadki, Imad and Lazaar, Saiida},
doi = {10.5815/ijcnis.2019.06.01},
journal = {International Journal of Computer Network and Information Security},
pages = {1--9},
title = {{A New Classification Based Model for Malicious PE Files Detection}},
volume = {11},
year = {2019}
}
@misc{Cohen2019,
annote = {(Accessed on 04/28/2021)},
author = {Cohen, Remi and Walkowski, Debbie},
howpublished = {$\backslash$url{\{}https://www.f5.com/labs/articles/education/banking-trojans-a-reference-guide-to-the-malware-family-tree{\}}},
title = {{Banking Trojans: A Reference Guide to the Malware Family Tree}},
year = {2019}
}
@article{Carlin2017,
author = {Carlin, Domhnall and Cowan, Alexandra and O'Kane, Philip and Sezer, Sakir},
doi = {10.1109/ACCESS.2017.2749538},
journal = {IEEE Access},
pages = {17742--17752},
title = {{The Effects of Traditional Anti-Virus Labels on Malware Detection Using Dynamic Runtime Opcodes}},
volume = {5},
year = {2017}
}
@book{KA2018,
abstract = {Malware analysis and memory forensics are powerful analysis and investigation techniques used in reverse engineering, digital forensics, and incident response. This book teaches you the concepts, tools, and techniques to determine the behavior and characteristics of malware using malware analysis and memory forensics.},
address = {Birmingham},
author = {{K A}, Monnappa},
booktitle = {Learning Malware Analysis},
isbn = {1788392507},
keywords = {Computer security,Computer software-Evaluation,Malware (Computer software),Microsoft Windows (Computer file)},
publisher = {Packt Publishing, Limited},
title = {{Learning Malware Analysis: Explore the Concepts, Tools, and Techniques to Analyze and Investigate Windows Malware}},
year = {2018}
}
@book{Cole2009,
abstract = {The comprehensive A-to-Z guide on network security, fully revised and updated Network security is constantly evolving, and this comprehensive guide has been thoroughly updated to cover the newest developments. If you are responsible for network security, this is the reference you need at your side. Covering new techniques, technology, and methods for approaching security, it also examines new trends and best practices being used by many organizations. The revised Network Security Bible complements the Cisco Academy course instruction in networking security. Covers all core areas of network security and how they interrelate Fully revised to address new techniques, technology, and methods for securing an enterprise worldwide Examines new trends and best practices in use by organizations to secure their enterprises Features additional chapters on areas related to data protection/correlation and forensics Includes cutting-edge topics such as integrated cybersecurity and sections on Security Landscape, with chapters on validating security, data protection, forensics, and attacks and threats If you need to get up to date or stay current on network security, Network Security Bible, 2nd Edition covers everything you need to know.},
author = {Cole, Eric},
edition = {2nd},
isbn = {0470502495},
publisher = {Wiley Publishing},
title = {{Network Security Bible}},
year = {2009}
}
@misc{PEFormat89:online,
annote = {(Accessed on 04/29/2021)},
howpublished = {$\backslash$url{\{}https://docs.microsoft.com/en-us/windows/win32/debug/pe-format{\}}},
title = {{PE Format - Win32 apps | Microsoft Docs}}
}
@book{Graham2010,
abstract = {The sophisticated methods used in recent high-profile cyber incidents have driven many to need to understand how such security issues work. Demystifying the complexity often associated with information assurance, Cyber Security Essentials provides a clear understanding of the concepts behind prevalent threats, tactics, and procedures. To accomplish this, the team of security professionals from VeriSigns iDefense Security Intelligence Services supply an extensive review of the computer security landscape. Although the text is accessible to those new to cyber security, its comprehensive nature makes it ideal for experts who need to explain how computer security works to non-technical staff. Providing a fundamental understanding of the theory behind the key issues impacting cyber security, the book: Covers attacker methods and motivations, exploitation trends, malicious code techniques, and the latest threat vectors Addresses more than 75 key security concepts in a series of concise, well-illustrated summaries designed for most levels of technical understanding Supplies actionable advice for the mitigation of threats Breaks down the code used to write exploits into understandable diagrams This book is not about the latest attack trends or botnets. Its about the reasons why these problems continue to plague us. By better understanding the logic presented in these pages, readers will be prepared to transition to a career in the growing field of cyber security and enable proactive responses to the threats and attacks on the horizon.},
address = {USA},
author = {Graham, James and Olson, Ryan and Howard, Rick},
edition = {1st},
isbn = {9781439851234},
publisher = {Auerbach Publications},
title = {{Cyber Security Essentials}},
year = {2010}
}
@book{Sikorski2012,
abstract = {Praise for Practical Malware Analysis The book every malware analyst should keep handy. --Richard Bejtlich, CSO, Mandiant {\&} Founder of TaoSecurity An excellent crash course in malware analysis. --Dino Dai Zovi, Independent Security Consultant . . . the most comprehensive guide to analysis of malware, offering detailed coverage of all the essential skills required to understand the specific challenges presented by modern malware. --Chris Eagle, Senior Lecturer of Computer Science at the Naval Postgraduate School A hands-on introduction to malware analysis. I'd recommend it to anyone who wants to dissect Windows malware. --Ilfak Guilfanov, Creator of IDA Pro . . . a great introduction to malware analysis. All chapters contain detailed technical explanations and hands-on lab exercises to get you immediate exposure to real malware. --Sebastian Porst, Google Software Engineer . . . brings reverse engineering to readers of all skill levels. Technically rich and accessible, the labs will lead you to a deeper understanding of the art and science of reverse engineering. I strongly recommend this book for beginners and experts alike. --Danny Quist, PhD, Founder of Offensive Computing If you only read one malware book or are looking to break into the world of malware analysis, this is the book to get. --Patrick Engbretson, IA Professor at Dakota State University and Author of The Basics of Hacking and Pen Testing . . . an excellent addition to the course materials for an advanced graduate level course on Software Security or Intrusion Detection Systems. The labs are especially useful to students in teaching the methods to reverse engineer, analyze and understand malicious software. --Sal Stolfo, Professor, Columbia University},
address = {USA},
author = {Sikorski, Michael and Honig, Andrew},
edition = {1st},
isbn = {1593272901},
publisher = {No Starch Press},
title = {{Practical Malware Analysis: The Hands-On Guide to Dissecting Malicious Software}},
year = {2012}
}
@book{Oktavianto2013,
abstract = {Analyze malware using Cuckoo Sandbox Overview Learn how to analyze malware in a straightforward way with minimum technical skills Understand the risk of the rise of document-based malware Enhance your malware analysis concepts through illustrations, tips and tricks, step-by-step instructions, and practical real-world scenarios In Detail Cuckoo Sandbox is a leading open source automated malware analysis system. This means that you can throw any suspicious file at it and, in a matter of seconds, Cuckoo will provide you with some detailed results outlining what said file did when executed inside an isolated environment. Cuckoo Malware Analysis is a hands-on guide that will provide you with everything you need to know to use Cuckoo Sandbox with added tools like Volatility, Yara, Cuckooforcanari, Cuckoomx, Radare, and Bokken, which will help you to learn malware analysis in an easier and more efficient way. Cuckoo Malware Analysis will cover basic theories in sandboxing, automating malware analysis, and how to prepare a safe environment lab for malware analysis. You will get acquainted with Cuckoo Sandbox architecture and learn how to install Cuckoo Sandbox, troubleshoot the problems after installation, submit malware samples, and also analyze PDF files, URLs, and binary files. This book also covers memory forensics using the memory dump feature, additional memory forensics using Volatility, viewing result analyses using the Cuckoo analysis package, and analyzing APT attacks using Cuckoo Sandbox, Volatility, and Yara. Finally, you will also learn how to screen Cuckoo Sandbox against VM detection and how to automate the scanning of e-mail attachments with Cuckoo. What you will learn from this book Get started with automated malware analysis using Cuckoo Sandbox Use Cuckoo Sandbox to analyze sample malware Analyze output from Cuckoo Sandbox Report results with Cuckoo Sandbox in standard form Learn tips and tricks to get the most out of your malware analysis results Approach This book is a step-by-step, practical tutorial for analyzing and detecting malware and performing digital investigations. This book features clear and concise guidance in an easily accessible format. Who this book is written for Cuckoo Malware Analysis is great for anyone who wants to analyze malware through programming, networking, disassembling, forensics, and virtualization. Whether you are new to malware analysis or have some experience, this book will help you get started with Cuckoo Sandbox so you can start analysing malware effectively and efficiently.},
author = {Oktavianto, Digit and Muhardianto, Iqbal},
isbn = {1782169237},
publisher = {Packt Publishing},
title = {{Cuckoo Malware Analysis}},
year = {2013}
}
@inproceedings{Fuyong2017,
author = {Fuyong, Zhang and Tiezhu, Zhao},
doi = {10.1109/CSE-EUC.2017.157},
pages = {793--796},
title = {{Malware Detection and Classification Based on N-Grams Attribute Similarity}},
year = {2017}
}
@misc{Evolutio45:online,
annote = {(Accessed on 04/29/2021)},
author = {Roccia, Thomas and Shah, Chintan},
howpublished = {$\backslash$url{\{}https://www.mcafee.com/blogs/other-blogs/mcafee-labs/evolution-of-malware-sandbox-evasion-tactics-a-retrospective-study/{\}}},
title = {{Evolution of Malware Sandbox Evasion Tactics – A Retrospective Study | McAfee Blogs}},
year = {2019}
}
@inproceedings{Sethi2019,
author = {Sethi, K and Kumar, R and Sethi, L and Bera, P and Patra, P K},
booktitle = {2019 International Conference on Cyber Security and Protection of Digital Services (Cyber Security)},
doi = {10.1109/CyberSecPODS.2019.8885196},
pages = {1--4},
title = {{A Novel Machine Learning Based Malware Detection and Classification Framework}},
year = {2019}
}
@article{Gibert2020,
abstract = {The struggle between security analysts and malware developers is a never-ending battle with the complexity of malware changing as quickly as innovation grows. Current state-of-the-art research focus on the development and application of machine learning techniques for malware detection due to its ability to keep pace with malware evolution. This survey aims at providing a systematic and detailed overview of machine learning techniques for malware detection and in particular, deep learning techniques. The main contributions of the paper are: (1) it provides a complete description of the methods and features in a traditional machine learning workflow for malware detection and classification, (2) it explores the challenges and limitations of traditional machine learning and (3) it analyzes recent trends and developments in the field with special emphasis on deep learning approaches. Furthermore, (4) it presents the research issues and unsolved challenges of the state-of-the-art techniques and (5) it discusses the new directions of research. The survey helps researchers to have an understanding of the malware detection field and of the new developments and directions of research explored by the scientific community to tackle the problem.},
author = {Gibert, Daniel and Mateu, Carles and Planes, Jordi},
doi = {https://doi.org/10.1016/j.jnca.2019.102526},
issn = {1084-8045},
journal = {Journal of Network and Computer Applications},
keywords = {Deep learning,Feature engineering,Machine learning,Malware detection,Multimodal learning},
pages = {102526},
title = {{The rise of machine learning for detection and classification of malware: Research developments, trends and challenges}},
url = {https://www.sciencedirect.com/science/article/pii/S1084804519303868},
volume = {153},
year = {2020}
}
@article{Singh2020,
author = {Singh, Jagsir and Singh, Jaswinder},
doi = {10.1016/j.sysarc.2020.101861},
journal = {Journal of Systems Architecture},
pages = {101861},
title = {{A survey on machine learning-based malware detection in executable files}},
volume = {112},
year = {2020}
}
@inproceedings{Lee2011,
author = {Lee, Jinkyung and Im, Chaetae and Jeong, Hyuncheol},
doi = {10.1145/1968613.1968704},
pages = {75},
title = {{A study of malware detection and classification by comparing extracted strings}},
year = {2011}
}
@misc{CAPESand75:online,
annote = {(Accessed on 04/29/2021)},
howpublished = {$\backslash$url{\{}https://capev2.readthedocs.io/en/latest/index.html{\}}},
title = {{CAPE Sandbox Book — CAPE Sandbox v2.1 Book}}
}
@article{Galal2015,
author = {Galal, Hisham},
doi = {10.1007/s11416-015-0244-0},
journal = {Journal of Computer Virology and Hacking Techniques},
title = {{Behavior-based features model for malware detection}},
volume = {12},
year = {2015}
}
@article{Ghiasi2015,
abstract = {The number of malware files increases every day because of existing obfuscation techniques. Researchers recently pursued dynamic analysis to extract runtime behavior of programs to detect new malware variants. A method is proposed to find similarities of run-time behaviors based on the assumption that binary behaviors affect registers values differently. The idea has been explored in static settings known as VSA, where run-time values were estimated statically. VSA is extended into a dynamic setting in this research where actual run-time values are used to approximate all the possible values. Due to large number of values obtained for each binary in every register at run-time, a small representative set, a.k.a. prototypes, is extracted. Unknown files are classified based on comparison to these prototypes only. Experimental results showed that proposed method outperformed commercial Anti-Virus applications on the dataset used and reached a classification accuracy of 95.9{\%} with 4.5{\%} false positive. List of execution traces and dataset can be found at: http://home.shirazu.ac.ir/{\~{}}sami/malware.},
author = {Ghiasi, Mahboobe and Sami, Ashkan and Salehi, Zahra},
doi = {https://doi.org/10.1016/j.engappai.2015.05.008},
issn = {0952-1976},
journal = {Engineering Applications of Artificial Intelligence},
keywords = {API call,CPU register values,Dynamic analysis,Malware detection,x86 Registers values},
pages = {111--122},
title = {{Dynamic VSA: a framework for malware detection based on register contents}},
url = {https://www.sciencedirect.com/science/article/pii/S0952197615001190},
volume = {44},
year = {2015}
}
@misc{Afianian2018,
archivePrefix = {arXiv},
arxivId = {cs.CR/1811.01190},
author = {Afianian, Amir and Niksefat, Salman and Sadeghiyan, Babak and Baptiste, David},
eprint = {1811.01190},
primaryClass = {cs.CR},
title = {{Malware Dynamic Analysis Evasion Techniques: A Survey}},
year = {2018}
}
@misc{Wojnowicz2018,
archivePrefix = {arXiv},
arxivId = {cs.CR/1607.04950},
author = {Wojnowicz, Michael and Chisholm, Glenn and Wolff, Matt and Zhao, Xuan},
eprint = {1607.04950},
primaryClass = {cs.CR},
title = {{Wavelet decomposition of software entropy reveals symptoms of malicious code}},
year = {2018}
}
